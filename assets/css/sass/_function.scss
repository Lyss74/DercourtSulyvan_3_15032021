/////////////////////* START *////////////////////////

/* function */

// px -> em : $base / 16px = 0.75em
// px ->  % : $base / 16px * 100 = 75%
// px -> pt : $base * (72pt / 96px) = 12pt
// px -> em : $base / 16px = .75em
// em -> px : $base * 16px = 12px

// 1rem = 12pt = 16px = 100%


/* REM-COVERTER */  
// url|-> 'https://outils-css.aliasdmc.fr'
// values : 
// numeric $size, $base use default size
// call : {
//    rem(75, 100)
@function rem($size, $base: $BASE-FONT-SIZE) {
    @return 1rem * $size / strip-unit($base);
}

//
//
//
//
@function lightness-shift($colour) {
    @if (lightness($colour) < 25% ) {
        @return lighten($colour, 10%);
    } @else {
        @return darken($colour, 10%);
        }
}

//
//
//
//
@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }
    @return $number;
}

/* 
https://www.sitepoint.com/converting-typographic-units-sass/ 
  font-size: convert(16, px, percent);
*/
@function convert($value, $currentUnit, $convertUnit){
    @if $currentUnit == px{
  
      @if $convertUnit == rem{
        @return $value / 16 + 0em;
      }
      @else if $convertUnit == percent{
        @return percentage($value / 16);
      }
  
    }@else if $currentUnit == rem{
  
      @if $convertUnit == px{
        @return $value * 16 + 0px;
      }
      @else if $convertUnit == percent{
        @return percentage($value);
      }
  
    }@else if $currentUnit == percent{
  
      @if $convertUnit == px{
        @return $value * 16 / 100 + 0px;
      }
      @else if $convertUnit == rem{
        @return $value / 100 + 0em;
      }
  
    }@else if $currentUnit == pt{
  
      @if $convertUnit == px{
        @return $value * 1.3333 +0px;
      }
      @else if $convertUnit == rem{
        @return $value / 12 + 0em;
      }
      @else if $convertUnit == percent{
        @return percentage($value / 12)
      }
    }
  }