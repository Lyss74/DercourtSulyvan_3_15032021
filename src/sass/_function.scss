/*----------------------*\
        路 START 路
\*----------------------*/
/*-----------------*\
    路 function 路
\*-----------------*/

//
@function strip-unit($number) {
    @if type-of($number)=='number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }
    @return $number;
}


/* REM-COVERTER */

// url|-> 'https://outils-css.aliasdmc.fr'
// values : 
// numeric $size, $base use default size
// call : {
//    rem(75, 100)
@function rem($size, $base: $BASE-FONT-SIZE) {
    @return 1rem * $size / strip-unit($base);
}


/* VW-COVERTER */

// url|-> 'https://outils-css.aliasdmc.fr'
// values : 
// numeric $size, $base use default size
// call : {
//    rem(75, 100)
@function vw($base: $BASE-FONT-SIZE) {
    @return strip-unit($base) * 0.06510416667vw;
}

@function convert($value, $currentUnit, $convertUnit) {
    @if $currentUnit==px {
        @if $convertUnit==rem {
            @return $value / 16+0em;
        }
        @else if $convertUnit==percent {
            @return percentage($value / 16);
        }
    }
    @else if $currentUnit==rem {
        @if $convertUnit==px {
            @return $value * 16+0px;
        }
        @else if $convertUnit==percent {
            @return percentage($value);
        }
    }
    @else if $currentUnit==percent {
        @if $convertUnit==px {
            @return $value * 16 / 100+0px;
        }
        @else if $convertUnit==rem {
            @return $value / 100+0em;
        }
    }
    @else if $currentUnit==pt {
        @if $convertUnit==px {
            @return $value * 1.3333+0px;
        }
        @else if $convertUnit==rem {
            @return $value / 12+0em;
        }
        @else if $convertUnit==percent {
            @return percentage($value / 12)
        }
    }
}